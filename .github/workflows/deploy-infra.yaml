name: Deploy MoodMark Infra to AWS

on:
  push:
    branches:
      - main
      - feature-1
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC AssumeRole)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Extract LambdaCodeBucket from parameters file
        id: extract_bucket
        run: |
          echo "bucket=$(jq -r '.[] | select(.ParameterKey == "LambdaCodeBucket") | .ParameterValue' infra/moodmark-parameters.json)" >> $GITHUB_OUTPUT

      - name: Create LambdaCodeBucket if it does not exist
        run: |
          if ! aws s3api head-bucket --bucket "${{ steps.extract_bucket.outputs.bucket }}" 2>/dev/null; then
            aws s3api create-bucket --bucket "${{ steps.extract_bucket.outputs.bucket }}" --region ${{ secrets.AWS_REGION }} --create-bucket-configuration LocationConstraint=${{ secrets.AWS_REGION }}
          else
            echo "Bucket ${{ steps.extract_bucket.outputs.bucket }} already exists."
          fi
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Package user_auth Lambda with dependencies
        run: |
          pip install -r backend/requirements.txt -t backend/package
          copy backend/user_auth.py backend/package/
          cd backend/package
          zip -r ../../user_auth.zip .
          cd ../..
      - name: Zip other Lambda code packages
        run: |
          cd backend
          zip -r ../log_activity.zip log_activity.py
          zip -r ../get_suggestion.zip get_suggestion.py
          zip -r ../get_activitieslogperuserid.zip get_activitieslogperuserid.py
          cd ..

      - name: Upload Lambda deployment packages to S3
        run: |
          aws s3 cp user_auth.zip s3://${{ steps.extract_bucket.outputs.bucket }}/user_auth.zip
          aws s3 cp log_activity.zip s3://${{ steps.extract_bucket.outputs.bucket }}/log_activity.zip
          aws s3 cp get_suggestion.zip s3://${{ steps.extract_bucket.outputs.bucket }}/get_suggestion.zip
          aws s3 cp get_activitieslogperuserid.zip s3://${{ steps.extract_bucket.outputs.bucket }}/get_activitieslogperuserid.zip
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Deploy CloudFormation stack
        run: |
          aws cloudformation deploy \
            --template-file infra/moodmark-cloudformation.yaml \
            --stack-name moodmark-stack \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides file://infra/moodmark-parameters.json
